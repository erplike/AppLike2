{"version":3,"sources":["webpack:///./node_modules/dateformat/lib/dateformat.js","webpack:///./src/app/paginas/inventarios/kardex/kardex.module.ts","webpack:///./src/app/paginas/inventarios/kardex/kardex.page.html","webpack:///./src/app/paginas/inventarios/kardex/kardex.page.scss","webpack:///./src/app/paginas/inventarios/kardex/kardex.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,IAAI,GAAG,IAAI;AAChC,kJAAkJ,EAAE;AACpJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,EAAE;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;AACA;;;;AAIA,MAAM,IAA0C;AAChD,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,oGAAC;AACN,GAAG,MAAM,EAIN;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC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","file":"inventarios-kardex-kardex-module.js","sourcesContent":["/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ],\n    timeNames: [\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occurred and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TableComponent } from '../../../table/table.component';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { KardexPage } from './kardex.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: KardexPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [KardexPage, TableComponent],\n  entryComponents: [TableComponent]\n})\nexport class KardexPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Kardex</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content padding>\\n    <form name=\\\"kardex\\\">\\n        <!-- <div class=\\\"form-group\\\" style=\\\"margin:15px; font-family:'Nanum Myeongjo'; font-size: 120%\\\"> -->\\n            <div class=\\\"x_content\\\">\\n                <div   class=\\\"row\\\" >\\n                  <div class='col-md-3'>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"idsucursal\\\">Sucursal:</label>\\n                      <select name=\\\"idsucursal\\\" id='idsucursal' class=\\\"chosen-select form-control input-sm\\\" #idsucursal>\\n                        <option value='' >TODAS </option>\\n                        <option *ngFor=\\\"let sucursal of sucursales\\\"  value='{{ sucursal[0] }}' >{{ sucursal[1] }} </option>\\n                      </select>              \\n                    </div>            \\n                  </div>          \\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"periodo\\\">Periodo:</label>\\n                        <input type='month' class=\\\"form-control\\\"  id='periodo'  #periodo name='periodo' value='{{now}}'>               \\n                    </div> \\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"periodo\\\">Filtro:</label>\\n                            <input type=text class=\\\"form-control\\\"  id='periodo'  #filtro name='periodo'   >               \\n                      </div> \\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"form-group\\\"><br>\\n                            <ion-button (click)=\\\"tableResults(idsucursal.value, periodo.value, filtro.value)\\\">Buscar</ion-button>\\n                      </div>\\n                    </div> \\n                </div>\\n            </div>  \\n     </form>\\n     <div id=table>\\n        <ion-spinner name=\\\"circles\\\" *ngIf=\\\"!records\\\" id=\\\"colorLoading\\\"></ion-spinner>\\n        <div class=\\\"table-responsive\\\" *ngIf=\\\"records\\\">\\n            \\n            <hr style=\\\"color: #0056b2 ;\\\" noshade=\\\"noshade\\\" size=\\\"10\\\" width=\\\"100%\\\"  /> \\n            <br>\\n            <table class=\\\"table table-bordered\\\"  >\\n                        <th *ngFor='let iterador2 of tableTitle' id=\\\"Headertable\\\"> {{  iterador2 }} </th>\\n\\n                <tbody *ngFor='let iterador of ( table  | async)  ; let i=index'>\\n                    <tr *ngIf=\\\"i > 1 && records && i< numberRecord-1\\\" >\\n                        <td *ngFor='let iterador2 of ( tableTitle ); let j=index'> \\n                          <div *ngIf=\\\"j==4 && i< numberRecord-1\\\" id=\\\"numericSet\\\">\\n                            {{ iterador[j] }}\\n                          </div>\\n                          <div *ngIf=\\\"j!=4 && i< numberRecord-1\\\">\\n                              {{ iterador[j] }}\\n                          </div>\\n                        </td>\\n                    </tr>\\n                    <tr *ngIf=\\\"i==numberRecord-1 && records\\\" id=\\\"Headertable\\\" >\\n                        <td *ngFor='let iterador2 of ( tableTitle ); let j=index'> \\n                          <div *ngIf=\\\"j==4 && i<numberRecord\\\" id=\\\"numericSet\\\">\\n                            {{ iterador[j] }}\\n                          </div>\\n                          <div *ngIf=\\\"j!=4 && i<numberRecord\\\">\\n                              {{ iterador[j] }}\\n                          </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n     </div>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvaW52ZW50YXJpb3Mva2FyZGV4L2thcmRleC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ComponentFactoryResolver, ViewContainerRef, ViewChild } from '@angular/core';\nimport { JsonService } from '../../../json.service';\nimport { TableComponent } from '../../../table/table.component';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\n// tslint:disable-next-line: semicolon\ndeclare var require: any\n\n@Component({\n  selector: 'app-kardex',\n  templateUrl: './kardex.page.html',\n  styleUrls: ['./kardex.page.scss'],\n  /* changeDetection: ChangeDetectionStrategy.OnPush */\n})\nexport class KardexPage implements OnInit {\n  sucursales: any [];\n  tableComponent = TableComponent;\n  table: Observable<any[]>;\n  tableTitle: any [];\n  records: boolean;\n  numberRecord: number;\n  status: any [];\n  now: Date;\n\nconstructor(public jsonService: JsonService,\n            private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef) {\n              this.getSucursales();\n              const dateFormat = require('dateformat');\n              this.now = new Date();\n              this.now = dateFormat(this.now, 'yyyy-mm');\n              this.records = true;\n}\nngOnInit() {  /* this.tableResults('99999', '', ''); */ }\n    getSucursales() {\n      this.sucursales = this.jsonService.getSucursales();\n    }\n  tableResults( idsucursal: string, periodo: string , filtro: string ) {\n    this.records = false;\n    const formData = new FormData();\n    formData.append('idsucursal', idsucursal);\n    formData.append('periodo', periodo);\n    formData.append('filtro', filtro);\n    this.jsonService.postJson('https://app.networkingsas.com/app/inventario/kardex.php', formData).subscribe\n    ((res: Array<string>) => {\n      console.log(res);\n      if (!res) {\n        this.records = false;\n        alert('No hay registros');\n        return;\n      }\n      // tslint:disable-next-line: prefer-const\n      let data = [];\n      let i = 0 ;\n      // tslint:disable-next-line: only-arrow-functions\n      Object.keys(res).forEach(function(key) {\n        /* console.log(res[key]); */\n        data[i] = (res[key]);\n        i++;\n      });\n      console.log(data.length);\n      // tslint:disable-next-line: no-string-literal\n      this.numberRecord = data.length;\n      this.status = data[0];\n      if ( this.status[0] ) {\n        alert(this.status[1]);\n        return;\n      }\n      this.records = true;\n      this.tableTitle = data[1];\n      this.table = of(data);\n      /* this.tableTitle= of(this.tableTitle); */\n      /* window.location.reload(); */\n     /*  alert(data.length); */\n     });\n  }\n}\n"],"sourceRoot":""}