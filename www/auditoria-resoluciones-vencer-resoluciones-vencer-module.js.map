{"version":3,"sources":["webpack:///./src/app/paginas/auditoria/resoluciones-vencer/resoluciones-vencer.module.ts","webpack:///./src/app/paginas/auditoria/resoluciones-vencer/resoluciones-vencer.page.html","webpack:///./src/app/paginas/auditoria/resoluciones-vencer/resoluciones-vencer.page.scss","webpack:///./src/app/paginas/auditoria/resoluciones-vencer/resoluciones-vencer.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEuB;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AAWF,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;CAAG;AAA/B,4BAA4B;IATxC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,gFAAsB,CAAC;KACvC,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;ACzBzC,+eAA+e,+RAA+R,cAAc,6FAA6F,iIAAiI,iBAAiB,eAAe,4G;;;;;;;;;;;ACA1hC,+DAA+D,mM;;;;;;;;;;;;;;;;;;;;ACA0C;AACrD;AACY;AAEtC;AAO1B,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAWnC,YAAmB,WAAwB,EACvB,wBAAkD,EAAU,gBAAkC;QAD/F,gBAAW,GAAX,WAAW,CAAa;QACvB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QARhH,mBAAc,GAAG,qEAAc,CAAC;IASlC,CAAC;IACD,QAAQ,KAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IAElC,YAAY;QACV,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,oEAAoE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAClH,CAAC,GAAkB,EAAE,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,GAAG,EAAE;gBACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC1B,OAAO;aACR;YACD,yCAAyC;YACzC,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,GAAG,CAAC,CAAE;YACX,iDAAiD;YACjD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;gBACnC,4BAA4B;gBAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrB,CAAC,EAAE,CAAC;YACN,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,8CAA8C;YAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,IAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAG;gBACpB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,OAAO;aACR;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,+CAAE,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACN,CAAC;CACF;AAhDY,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,qJAA8C;;KAE/C,CAAC;2EAY8B,yDAAW;QACG,sEAAwB,EAA4B,8DAAgB;GAZrG,sBAAsB,CAgDlC;AAhDkC","file":"auditoria-resoluciones-vencer-resoluciones-vencer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResolucionesVencerPage } from './resoluciones-vencer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResolucionesVencerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResolucionesVencerPage]\n})\nexport class ResolucionesVencerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Resoluciones proximas a vencer</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<br>\\n<br>\\n<ion-content padding>\\n  <div id=table>\\n    <ion-spinner name=\\\"circles\\\" *ngIf=\\\"!records\\\" id=\\\"colorLoading\\\"></ion-spinner>\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"records\\\">\\n        <!-- <hr style=\\\"color: #0056b2 ;\\\" noshade=\\\"noshade\\\" size=\\\"10\\\" width=\\\"100%\\\"  /> \\n        <br> -->\\n        <!-- <h3>Resoluciones proximas a vencer </h3> -->\\n        <table class=\\\"table table-bordered\\\"  >\\n            <thead>\\n                    <th *ngFor='let iterador2 of tableTitle' id=\\\"headerTable\\\"> {{  iterador2 }} </th>\\n            </thead>\\n            <tbody *ngFor='let iterador of ( table  | async)  ; let i=index'>\\n                <tr *ngIf=\\\"i > 1 && records\\\">\\n                    <td *ngFor='let iterador2 of ( tableTitle ); let j=index'> {{ iterador[j] }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvYXVkaXRvcmlhL3Jlc29sdWNpb25lcy12ZW5jZXIvcmVzb2x1Y2lvbmVzLXZlbmNlci5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ComponentFactoryResolver, ViewContainerRef, ViewChild } from '@angular/core';\nimport { JsonService } from '../../../json.service';\nimport { TableComponent } from '../../../table/table.component';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-resoluciones-vencer',\n  templateUrl: './resoluciones-vencer.page.html',\n  styleUrls: ['./resoluciones-vencer.page.scss'],\n})\nexport class ResolucionesVencerPage implements OnInit {\n\n \n  sucursales: any [];\n  tableComponent = TableComponent;\n  table: Observable<any[]>;\n  tableTitle: any [];\n  records: boolean;\n  numberRecord: number;\n  status: any [];\n\nconstructor(public jsonService: JsonService,\n            private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef) {\n}\nngOnInit() {  this.tableResults(); }\n\n  tableResults(  ) {\n    const formData = new FormData();\n    this.jsonService.postJson('https://app.networkingsas.com/app/auditoria/resolucionesVencer.php', formData).subscribe\n    ((res: Array<string>) => {\n      console.log(res);\n      if (!res) {\n        this.records = false;\n        alert('No hay registros');\n        return;\n      }\n      // tslint:disable-next-line: prefer-const\n      let data = [];\n      let i = 0 ;\n      // tslint:disable-next-line: only-arrow-functions\n      Object.keys(res).forEach(function(key) {\n        /* console.log(res[key]); */\n        data[i] = (res[key]);\n        i++;\n      });\n      console.log(data.length);\n      // tslint:disable-next-line: no-string-literal\n      this.numberRecord = data.length;\n      this.status = data[0];\n      if ( this.status[0] ) {\n        alert(this.status[1]);\n        return;\n      }\n      this.records = true;\n      this.tableTitle = data[1];\n      this.table = of(data);\n     });\n  }\n}\n"],"sourceRoot":""}